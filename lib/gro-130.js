const GOOGLE_SHEET_CSV_URL = 'https:const BASE_X_FIELD_NAME = 'Xraw';const BASE_Y_FIELD_NAME = 'Yraw';const COL_INDEX ={Point:0,Xraw:1,Yraw:2,H:3,Info:4};const DEBOUNCE_DELAY = 400;const MAX_NEARBY_DISTANCE = 300;let fullDatabaseCache = [];let currentDisplayRecords = [];let isNoteVisible = true;let shouldIgnoreChars = false;let debounceTimer;let isLoading = false;const outputContainer = document.getElementById('output-list');const messageState = document.getElementById('airtable-message-state');const searchInput = document.getElementById('search-input');const searchModeToggleButtons = document.querySelectorAll('.search-mode-toggle input[name="search-mode"]');const noteToggleButtons = document.querySelectorAll('.note-toggle input[name="note-mode"]');const ignoreCharsToggleButtons = document.querySelectorAll('.ignore-chars-toggle input[name="ignore-mode"]');const nearbyPopup = document.getElementById('nearby-popup');const nearbyListContainer = document.getElementById('nearby-list');function displayRecords(records){outputContainer.innerHTML = '';if (isLoading){messageState.textContent = 'Загрузка данных...';messageState.style.display = 'block';messageState.classList.remove('error');outputContainer.style.display = 'none';return;}if (records.length === 0){if (fullDatabaseCache.length === 0){messageState.textContent = 'Ошибка загрузки базы или база пуста.';}else if (searchInput.value.trim() === ''){messageState.textContent = `Список загружен. Введите запрос для поиска...`;}else{messageState.textContent = 'Ничего не найдено по вашему запросу.';}messageState.style.display = 'block';messageState.classList.remove('error');outputContainer.style.display = 'none';return;}messageState.style.display = 'none';outputContainer.style.display = 'block';const fragment = document.createDocumentFragment();records.forEach(record =>{const point = record.fields['Point'] || 'N/A';const info = record.fields['Info'] || 'N/A';const h = record.fields['H'] || 'N/A';const calculatedX = parseFloat(record.fields[BASE_X_FIELD_NAME]);const calculatedY = parseFloat(record.fields[BASE_Y_FIELD_NAME]);const formattedX = groUtils.formatCoordinate(calculatedX);const formattedY = groUtils.formatCoordinate(calculatedY);const formattedH = groUtils.formatCoordinate(h);let outputStringPart = `,${formattedX},${formattedY},${formattedH},`;if (isNoteVisible){outputStringPart += info;}const lineDiv = document.createElement('div');lineDiv.className = 'output-line';const pointLink = document.createElement('a');pointLink.textContent = point;pointLink.className = 'point-link';pointLink.href = '#';pointLink.dataset.id = record.id;lineDiv.appendChild(pointLink);lineDiv.append(outputStringPart);fragment.appendChild(lineDiv);});outputContainer.appendChild(fragment);}function findAndShowNearby(clickedRecordId){const referencePoint = fullDatabaseCache.find(r => r.id === clickedRecordId);if (!referencePoint){console.error("Reference point not found in cache:",clickedRecordId);return;}const refX = parseFloat(referencePoint.fields[BASE_X_FIELD_NAME]);const refY = parseFloat(referencePoint.fields[BASE_Y_FIELD_NAME]);if (isNaN(refX) || isNaN(refY)){alert('Невозможно рассчитать расстояние:у выбранной точки некорректные базовые координаты.');return;}const nearbyPoints = [];fullDatabaseCache.forEach(candidateRecord =>{if (candidateRecord.id === clickedRecordId) return;const candX = parseFloat(candidateRecord.fields[BASE_X_FIELD_NAME]);const candY = parseFloat(candidateRecord.fields[BASE_Y_FIELD_NAME]);if (isNaN(candX) || isNaN(candY)) return;const deltaX = candX - refX;const deltaY = candY - refY;const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);if (distance <= MAX_NEARBY_DISTANCE){nearbyPoints.push({record:candidateRecord,distance:distance,calculatedX:candX,calculatedY:candY});}});nearbyPoints.sort((a,b) => a.distance - b.distance);nearbyListContainer.innerHTML = '';const refPointData = referencePoint.fields;const refFormattedX = groUtils.formatCoordinate(refX);const refFormattedY = groUtils.formatCoordinate(refY);const refFormattedH = groUtils.formatCoordinate(refPointData['H']);let refOutputString = `${refPointData['Point'] || 'N/A'},${refFormattedX},${refFormattedY},${refFormattedH},`;if (isNoteVisible){refOutputString += (refPointData['Info'] || 'N/A');}const refElement = document.createElement('div');refElement.className = 'reference-point';refElement.innerHTML = `<strong>Исходная:</strong> ${refOutputString}`;nearbyListContainer.appendChild(refElement);if (nearbyPoints.length > 0){nearbyPoints.forEach(item =>{const recordData = item.record.fields;const point = recordData['Point'] || 'N/A';const info = recordData['Info'] || 'N/A';const formattedX = groUtils.formatCoordinate(item.calculatedX);const formattedY = groUtils.formatCoordinate(item.calculatedY);const formattedH = groUtils.formatCoordinate(recordData['H']);let outputString = `${point},${formattedX},${formattedY},${formattedH},`;if (isNoteVisible){outputString += info;}const listItem = document.createElement('div');listItem.className = 'nearby-item';listItem.innerHTML = `<span class="nearby-distance">(${item.distance.toFixed(1)})</span> ${outputString}`;nearbyListContainer.appendChild(listItem);});}else{const noNearbyDiv = document.createElement('div');noNearbyDiv.textContent = 'Ближайшие точки (до 300м) не найдены.';nearbyListContainer.appendChild(noNearbyDiv);}nearbyPopup.style.display = 'flex';}function closeNearbyPopup(){nearbyPopup.style.display = 'none';nearbyListContainer.innerHTML = '';}async function fetchAllRecords(){isLoading = true;messageState.textContent = 'Загрузка данных. Пожалуйста подождите...';messageState.style.display = 'block';messageState.classList.remove('error');outputContainer.style.display = 'none';fullDatabaseCache = [];try{const nocacheUrl = `${GOOGLE_SHEET_CSV_URL}&_=${Date.now()}`;const response = await fetch(nocacheUrl);if (!response.ok){throw new Error(`Ошибка загрузки CSV:${response.status}${response.statusText}`);}const csvText = await response.text();fullDatabaseCache = groUtils.parseCSV(csvText);isLoading = false;currentDisplayRecords = [];displayRecords(currentDisplayRecords);}catch (error){console.error('Ошибка загрузки базы данных из CSV:',error);isLoading = false;messageState.textContent = `Не удалось загрузить базу из Google Sheets:${error.message}. Попробуйте обновить страницу.`;messageState.classList.add('error');messageState.style.display = 'block';}}searchInput.addEventListener('input',() =>{clearTimeout(debounceTimer);debounceTimer = setTimeout(groUtils.performSearch,DEBOUNCE_DELAY);});searchModeToggleButtons.forEach(radio =>{radio.addEventListener('change',() =>{if (searchInput.value.trim() !== ''){groUtils.performSearch();}});});noteToggleButtons.forEach(radio =>{radio.addEventListener('change',(event) =>{isNoteVisible = event.target.value === 'on';displayRecords(currentDisplayRecords);});});ignoreCharsToggleButtons.forEach(radio =>{radio.addEventListener('change',() =>{if (searchInput.value.trim() !== ''){groUtils.performSearch();}});});outputContainer.addEventListener('click',(event) =>{if (event.target.classList.contains('point-link')){event.preventDefault();const recordId = event.target.dataset.id;if (recordId){findAndShowNearby(recordId);}else{console.error("Could not find record ID on clicked link:",event.target);}}});nearbyPopup.addEventListener('click',(event) =>{if (event.target === nearbyPopup){closeNearbyPopup();}});fetchAllRecords();
